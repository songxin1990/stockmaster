<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.songxin.stock.dao.TradeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.songxin.stock.entity.db.TradeRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stockholder_code" property="stockholderCode" jdbcType="VARCHAR" />
    <result column="stock_code" property="stockCode" jdbcType="VARCHAR" />
    <result column="stock_name" property="stockName" jdbcType="VARCHAR" />
    <result column="buy_sell_flag" property="buySellFlag" jdbcType="CHAR" />
    <result column="trade_datetime" property="tradeDatetime" jdbcType="TIMESTAMP" />
    <result column="trade_price" property="tradePrice" jdbcType="DECIMAL" />
    <result column="trade_num" property="tradeNum" jdbcType="INTEGER" />
    <result column="trade_amount" property="tradeAmount" jdbcType="DECIMAL" />
    
    <!--  -->
    <result column="trade_series_id" property="tradeSeriesId" jdbcType="INTEGER" />
    <result column="is_processed" property="isProcessed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, stockholder_code, stock_code, stock_name, buy_sell_flag, trade_datetime, trade_price, 
    trade_num, trade_amount,trade_series_id,is_processed
  </sql>
  
  <sql id="condition" >
    <if test="null!=params" >
    
      
    
    </if>
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from trade_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trade_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.songxin.stock.entity.db.TradeRecord" >
    insert into trade_record (id, stockholder_code, stock_code, 
      stock_name, buy_sell_flag, trade_datetime, 
      trade_price, trade_num, trade_amount,trade_series_id,is_processed
      )
    values (#{id,jdbcType=INTEGER}, #{stockholderCode,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR}, 
      #{stockName,jdbcType=VARCHAR}, #{buySellFlag,jdbcType=CHAR}, #{tradeDatetime,jdbcType=TIMESTAMP}, 
      #{tradePrice,jdbcType=DECIMAL}, #{tradeNum,jdbcType=INTEGER}, #{tradeAmount,jdbcType=DECIMAL},#{tradeSeriesId,jdbcType=INTEGER},#{isProcessed,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.songxin.stock.entity.db.TradeRecord" >
    insert into trade_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stockholderCode != null" >
        stockholder_code,
      </if>
      <if test="stockCode != null" >
        stock_code,
      </if>
      <if test="stockName != null" >
        stock_name,
      </if>
      <if test="buySellFlag != null" >
        buy_sell_flag,
      </if>
      <if test="tradeDatetime != null" >
        trade_datetime,
      </if>
      <if test="tradePrice != null" >
        trade_price,
      </if>
      <if test="tradeNum != null" >
        trade_num,
      </if>
      <if test="tradeAmount != null" >
        trade_amount,
      </if>
      <if test="tradeSeriesId != null" >
        trade_series_id,
      </if>
      <if test="isProcessed != null" >
        is_processed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stockholderCode != null" >
        #{stockholderCode,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null" >
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null" >
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="buySellFlag != null" >
        #{buySellFlag,jdbcType=CHAR},
      </if>
      <if test="tradeDatetime != null" >
        #{tradeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradePrice != null" >
        #{tradePrice,jdbcType=DECIMAL},
      </if>
      <if test="tradeNum != null" >
        #{tradeNum,jdbcType=INTEGER},
      </if>
      <if test="tradeAmount != null" >
        #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeSeriesId != null" >
        #{tradeSeriesId,jdbcType=INTEGER},
      </if>
      <if test="isProcessed != null" >
        #{isProcessed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.songxin.stock.entity.db.TradeRecord" >
    update trade_record
    <set >
      <if test="stockholderCode != null" >
        stockholder_code = #{stockholderCode,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null" >
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null" >
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="buySellFlag != null" >
        buy_sell_flag = #{buySellFlag,jdbcType=CHAR},
      </if>
      <if test="tradeDatetime != null" >
        trade_datetime = #{tradeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradePrice != null" >
        trade_price = #{tradePrice,jdbcType=DECIMAL},
      </if>
      <if test="tradeNum != null" >
        trade_num = #{tradeNum,jdbcType=INTEGER},
      </if>
      <if test="tradeAmount != null" >
        trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test=" tradeSeriesId!= null" >
        trade_series_id = #{tradeSeriesId,jdbcType=INTEGER},
      </if>
       <if test=" isProcessed != null" >
        is_processed = #{isProcessed,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.songxin.stock.entity.db.TradeRecord" >
    update trade_record
    set stockholder_code = #{stockholderCode,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      buy_sell_flag = #{buySellFlag,jdbcType=CHAR},
      trade_datetime = #{tradeDatetime,jdbcType=TIMESTAMP},
      trade_price = #{tradePrice,jdbcType=DECIMAL},
      trade_num = #{tradeNum,jdbcType=INTEGER},
      trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      trade_series_id = #{tradeSeriesId,jdbcType=INTEGER},
      is_processed = #{isProcessed,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_record
    order by trade_datetime;
  </select>
  <!-- 查询未被处理的股票代码-->
  <select id="selectDistinctCode" resultType="String">
    SELECT DISTINCT(stock_code) 
    FROM trade_record 
    WHERE is_processed = 0
    ORDER BY trade_datetime
  </select>
  
   <select id="selective" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from trade_record
     where 1=1 
     
    <if test="null!=stockCode and ''!=stockCode " >
        and stock_code = ${stockCode}
     </if>
     <if test="null!=isProcessed and ''!=isProcessed " >
       and  is_processed = ${isProcessed}
     </if>
    <!-- <if test="orderByField != null and ''!=orderByField" >
      order by #{orderByField}
    </if> -->
    order by trade_datetime
  </select>
  
  
</mapper>